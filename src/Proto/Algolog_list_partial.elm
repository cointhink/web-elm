module Proto.Algolog_list_partial exposing (..)

-- DO NOT EDIT
-- AUTOGENERATED BY THE ELM PROTOCOL BUFFER COMPILER
-- https://github.com/tiziano88/elm-protobuf
-- source file: proto/algolog_list_partial.proto

import Protobuf exposing (..)

import Json.Decode as JD
import Json.Encode as JE
import Proto.Algolog exposing (..)


type alias AlgologListPartial =
    { listId : String -- 1
    , algolog : Maybe Algolog -- 2
    }


algologListPartialDecoder : JD.Decoder AlgologListPartial
algologListPartialDecoder =
    JD.lazy <| \_ -> decode AlgologListPartial
        |> required "ListId" JD.string ""
        |> optional "Algolog" algologDecoder


algologListPartialEncoder : AlgologListPartial -> JE.Value
algologListPartialEncoder v =
    JE.object <| List.filterMap identity <|
        [ (requiredFieldEncoder "ListId" JE.string "" v.listId)
        , (optionalEncoder "Algolog" algologEncoder v.algolog)
        ]
