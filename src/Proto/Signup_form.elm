-- DO NOT EDIT
-- AUTOGENERATED BY THE ELM PROTOCOL BUFFER COMPILER
-- https://github.com/tiziano88/elm-protobuf
-- source file: proto/signup_form.proto

module Proto.Signup_form exposing (..)

import Protobuf exposing (..)

import Json.Decode as JD
import Json.Encode as JE
import Proto.Account exposing (..)


type alias SignupForm =
    { account : Maybe Account -- 1
    , thing : String -- 2
    }


signupFormDecoder : JD.Decoder SignupForm
signupFormDecoder =
    JD.lazy <| \_ -> decode SignupForm
        |> optional "Account" accountDecoder
        |> required "Thing" JD.string ""


signupFormEncoder : SignupForm -> JE.Value
signupFormEncoder v =
    JE.object <| List.filterMap identity <|
        [ (optionalEncoder "Account" accountEncoder v.account)
        , (requiredFieldEncoder "Thing" JE.string "" v.thing)
        ]
