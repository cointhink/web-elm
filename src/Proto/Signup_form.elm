-- DO NOT EDIT
-- AUTOGENERATED BY THE ELM PROTOCOL BUFFER COMPILER
-- https://github.com/tiziano88/elm-protobuf
-- source file: proto/signup_form.proto

module Proto.Signup_form exposing (..)

import Protobuf exposing (..)

import Json.Decode as JD
import Json.Encode as JE


type alias SignupForm =
    { email : String -- 1
    , username : String -- 2
    , fullname : String -- 3
    }


signupFormDecoder : JD.Decoder SignupForm
signupFormDecoder =
    JD.lazy <| \_ -> decode SignupForm
        |> required "email" JD.string ""
        |> required "username" JD.string ""
        |> required "fullname" JD.string ""


signupFormEncoder : SignupForm -> JE.Value
signupFormEncoder v =
    JE.object <| List.filterMap identity <|
        [ (requiredFieldEncoder "email" JE.string "" v.email)
        , (requiredFieldEncoder "username" JE.string "" v.username)
        , (requiredFieldEncoder "fullname" JE.string "" v.fullname)
        ]
