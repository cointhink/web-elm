module Proto.Token exposing (..)

-- DO NOT EDIT
-- AUTOGENERATED BY THE ELM PROTOCOL BUFFER COMPILER
-- https://github.com/tiziano88/elm-protobuf
-- source file: proto/token.proto

import Protobuf exposing (..)

import Json.Decode as JD
import Json.Encode as JE


type alias Token =
    { id : String -- 1
    , createdAt : String -- 2
    , token : String -- 3
    , accountId : String -- 4
    , algorunId : String -- 5
    }


tokenDecoder : JD.Decoder Token
tokenDecoder =
    JD.lazy <| \_ -> decode Token
        |> required "Id" JD.string ""
        |> required "CreatedAt" JD.string ""
        |> required "Token" JD.string ""
        |> required "AccountId" JD.string ""
        |> required "AlgorunId" JD.string ""


tokenEncoder : Token -> JE.Value
tokenEncoder v =
    JE.object <| List.filterMap identity <|
        [ (requiredFieldEncoder "Id" JE.string "" v.id)
        , (requiredFieldEncoder "CreatedAt" JE.string "" v.createdAt)
        , (requiredFieldEncoder "Token" JE.string "" v.token)
        , (requiredFieldEncoder "AccountId" JE.string "" v.accountId)
        , (requiredFieldEncoder "AlgorunId" JE.string "" v.algorunId)
        ]
