-- DO NOT EDIT
-- AUTOGENERATED BY THE ELM PROTOCOL BUFFER COMPILER
-- https://github.com/tiziano88/elm-protobuf
-- source file: proto/account.proto

module Proto.Account exposing (..)

import Protobuf exposing (..)

import Json.Decode as JD
import Json.Encode as JE


type alias Account =
    { email : String -- 1
    , username : String -- 2
    , fullname : String -- 3
    }


accountDecoder : JD.Decoder Account
accountDecoder =
    JD.lazy <| \_ -> decode Account
        |> required "Email" JD.string ""
        |> required "Username" JD.string ""
        |> required "Fullname" JD.string ""


accountEncoder : Account -> JE.Value
accountEncoder v =
    JE.object <| List.filterMap identity <|
        [ (requiredFieldEncoder "Email" JE.string "" v.email)
        , (requiredFieldEncoder "Username" JE.string "" v.username)
        , (requiredFieldEncoder "Fullname" JE.string "" v.fullname)
        ]
