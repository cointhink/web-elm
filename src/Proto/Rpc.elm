module Proto.Rpc exposing (..)

-- DO NOT EDIT
-- AUTOGENERATED BY THE ELM PROTOCOL BUFFER COMPILER
-- https://github.com/tiziano88/elm-protobuf
-- source file: proto/rpc.proto

import Protobuf exposing (..)

import Json.Decode as JD
import Json.Encode as JE
import Google.Protobuf.Any exposing (..)


type alias Rpc =
    { id : String -- 1
    , method : String -- 2
    , token : String -- 3
    , object : Maybe Any -- 4
    }


rpcDecoder : JD.Decoder Rpc
rpcDecoder =
    JD.lazy <| \_ -> decode Rpc
        |> required "Id" JD.string ""
        |> required "Method" JD.string ""
        |> required "Token" JD.string ""
        |> optional "Object" anyDecoder


rpcEncoder : Rpc -> JE.Value
rpcEncoder v =
    JE.object <| List.filterMap identity <|
        [ (requiredFieldEncoder "Id" JE.string "" v.id)
        , (requiredFieldEncoder "Method" JE.string "" v.method)
        , (requiredFieldEncoder "Token" JE.string "" v.token)
        , (optionalEncoder "Object" anyEncoder v.object)
        ]
