module Proto.Lambda exposing (..)

-- DO NOT EDIT
-- AUTOGENERATED BY THE ELM PROTOCOL BUFFER COMPILER
-- https://github.com/tiziano88/elm-protobuf
-- source file: proto/lambda.proto

import Protobuf exposing (..)

import Json.Decode as JD
import Json.Encode as JE
import Google.Protobuf.Any exposing (..)


type alias Lambda =
    { token : String -- 1
    , method : String -- 2
    , object : Maybe Any -- 3
    , stateIn : String -- 4
    }


lambdaDecoder : JD.Decoder Lambda
lambdaDecoder =
    JD.lazy <| \_ -> decode Lambda
        |> required "Token" JD.string ""
        |> required "Method" JD.string ""
        |> optional "Object" anyDecoder
        |> required "StateIn" JD.string ""


lambdaEncoder : Lambda -> JE.Value
lambdaEncoder v =
    JE.object <| List.filterMap identity <|
        [ (requiredFieldEncoder "Token" JE.string "" v.token)
        , (requiredFieldEncoder "Method" JE.string "" v.method)
        , (optionalEncoder "Object" anyEncoder v.object)
        , (requiredFieldEncoder "StateIn" JE.string "" v.stateIn)
        ]
