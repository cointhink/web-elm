-- DO NOT EDIT
-- AUTOGENERATED BY THE ELM PROTOCOL BUFFER COMPILER
-- https://github.com/tiziano88/elm-protobuf
-- source file: proto/algorithm.proto

module Proto.Algorithm exposing (..)

import Protobuf exposing (..)

import Json.Decode as JD
import Json.Encode as JE


type alias Algorithm =
    { id : String -- 1
    , accountId : String -- 2
    , status : String -- 3
    , code : String -- 4
    }


algorithmDecoder : JD.Decoder Algorithm
algorithmDecoder =
    JD.lazy <| \_ -> decode Algorithm
        |> required "id" JD.string ""
        |> required "accountId" JD.string ""
        |> required "status" JD.string ""
        |> required "code" JD.string ""


algorithmEncoder : Algorithm -> JE.Value
algorithmEncoder v =
    JE.object <| List.filterMap identity <|
        [ (requiredFieldEncoder "id" JE.string "" v.id)
        , (requiredFieldEncoder "accountId" JE.string "" v.accountId)
        , (requiredFieldEncoder "status" JE.string "" v.status)
        , (requiredFieldEncoder "code" JE.string "" v.code)
        ]
