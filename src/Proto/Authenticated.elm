-- DO NOT EDIT
-- AUTOGENERATED BY THE ELM PROTOCOL BUFFER COMPILER
-- https://github.com/tiziano88/elm-protobuf
-- source file: proto/authenticated.proto

module Proto.Authenticated exposing (..)

import Protobuf exposing (..)

import Json.Decode as JD
import Json.Encode as JE
import Proto.Account exposing (..)


type alias Authenticated =
    { account : Maybe Account -- 1
    }


authenticatedDecoder : JD.Decoder Authenticated
authenticatedDecoder =
    JD.lazy <| \_ -> decode Authenticated
        |> optional "account" accountDecoder


authenticatedEncoder : Authenticated -> JE.Value
authenticatedEncoder v =
    JE.object <| List.filterMap identity <|
        [ (optionalEncoder "account" accountEncoder v.account)
        ]
