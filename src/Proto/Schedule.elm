-- DO NOT EDIT
-- AUTOGENERATED BY THE ELM PROTOCOL BUFFER COMPILER
-- https://github.com/tiziano88/elm-protobuf
-- source file: proto/schedule.proto

module Proto.Schedule exposing (..)

import Protobuf exposing (..)

import Json.Decode as JD
import Json.Encode as JE


type alias Schedule =
    { id : String -- 1
    , accountId : String -- 2
    , algorithmId : String -- 3
    , status : String -- 4
    }


scheduleDecoder : JD.Decoder Schedule
scheduleDecoder =
    JD.lazy <| \_ -> decode Schedule
        |> required "id" JD.string ""
        |> required "accountId" JD.string ""
        |> required "algorithmId" JD.string ""
        |> required "status" JD.string ""


scheduleEncoder : Schedule -> JE.Value
scheduleEncoder v =
    JE.object <| List.filterMap identity <|
        [ (requiredFieldEncoder "id" JE.string "" v.id)
        , (requiredFieldEncoder "accountId" JE.string "" v.accountId)
        , (requiredFieldEncoder "algorithmId" JE.string "" v.algorithmId)
        , (requiredFieldEncoder "status" JE.string "" v.status)
        ]
