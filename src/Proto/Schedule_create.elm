-- DO NOT EDIT
-- AUTOGENERATED BY THE ELM PROTOCOL BUFFER COMPILER
-- https://github.com/tiziano88/elm-protobuf
-- source file: proto/schedule_create.proto

module Proto.Schedule_create exposing (..)

import Protobuf exposing (..)

import Json.Decode as JD
import Json.Encode as JE
import Proto.Schedule exposing (..)


type alias ScheduleCreate =
    { token : String -- 1
    , schedule : Maybe Schedule -- 2
    }


scheduleCreateDecoder : JD.Decoder ScheduleCreate
scheduleCreateDecoder =
    JD.lazy <| \_ -> decode ScheduleCreate
        |> required "Token" JD.string ""
        |> optional "Schedule" scheduleDecoder


scheduleCreateEncoder : ScheduleCreate -> JE.Value
scheduleCreateEncoder v =
    JE.object <| List.filterMap identity <|
        [ (requiredFieldEncoder "Token" JE.string "" v.token)
        , (optionalEncoder "Schedule" scheduleEncoder v.schedule)
        ]
