module Proto.Heartbeat exposing (..)

-- DO NOT EDIT
-- AUTOGENERATED BY THE ELM PROTOCOL BUFFER COMPILER
-- https://github.com/tiziano88/elm-protobuf
-- source file: proto/heartbeat.proto

import Protobuf exposing (..)

import Json.Decode as JD
import Json.Encode as JE


type alias Heartbeat =
    { challenge : String -- 1
    }


heartbeatDecoder : JD.Decoder Heartbeat
heartbeatDecoder =
    JD.lazy <| \_ -> decode Heartbeat
        |> required "Challenge" JD.string ""


heartbeatEncoder : Heartbeat -> JE.Value
heartbeatEncoder v =
    JE.object <| List.filterMap identity <|
        [ (requiredFieldEncoder "Challenge" JE.string "" v.challenge)
        ]
