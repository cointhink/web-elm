module Proto.Algorun exposing (..)

-- DO NOT EDIT
-- AUTOGENERATED BY THE ELM PROTOCOL BUFFER COMPILER
-- https://github.com/tiziano88/elm-protobuf
-- source file: proto/algorun.proto

import Protobuf exposing (..)

import Json.Decode as JD
import Json.Encode as JE


type alias Algorun =
    { id : String -- 1
    , algorithmId : String -- 2
    , accountId : String -- 3
    , status : String -- 4
    }


algorunDecoder : JD.Decoder Algorun
algorunDecoder =
    JD.lazy <| \_ -> decode Algorun
        |> required "Id" JD.string ""
        |> required "AlgorithmId" JD.string ""
        |> required "AccountId" JD.string ""
        |> required "Status" JD.string ""


algorunEncoder : Algorun -> JE.Value
algorunEncoder v =
    JE.object <| List.filterMap identity <|
        [ (requiredFieldEncoder "Id" JE.string "" v.id)
        , (requiredFieldEncoder "AlgorithmId" JE.string "" v.algorithmId)
        , (requiredFieldEncoder "AccountId" JE.string "" v.accountId)
        , (requiredFieldEncoder "Status" JE.string "" v.status)
        ]
